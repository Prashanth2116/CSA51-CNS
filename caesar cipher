#include <stdio.h>

// Function to perform Caesar cipher encryption
void encryptCaesarCipher(char plaintext[], int key) {
    char encryptedText[1000]; // Assuming a maximum length for the encrypted text
    
    int i;
    for (i = 0; plaintext[i] != '\0'; i++) {
        if (plaintext[i] >= 'a' && plaintext[i] <= 'z') {
            // Encrypt lowercase letters
            encryptedText[i] = 'a' + (plaintext[i] - 'a' + key) % 26;
        } else if (plaintext[i] >= 'A' && plaintext[i] <= 'Z') {
            // Encrypt uppercase letters
            encryptedText[i] = 'A' + (plaintext[i] - 'A' + key) % 26;
        } else {
            // Leave non-alphabetic characters unchanged
            encryptedText[i] = plaintext[i];
        }
    }

    // Null-terminate the encrypted text
    encryptedText[i] = '\0';

    printf("Encrypted Text: %s\n", encryptedText);
}

int main() {
    char plaintext[1000];
    int key;

    // Input plaintext and key
    printf("Enter the plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);

    printf("Enter the key (an integer): ");
    scanf("%d", &key);

    // Call the encryption function
    encryptCaesarCipher(plaintext, key);

    return 0;
}
